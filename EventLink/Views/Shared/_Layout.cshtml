<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - EventLink</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/EventLink.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/dark_mode.css" asp-append-version="true" />
</head>

<body>
    <header>
        <nav class="navbar navbar-expand-lg navbar-light bg-light dark-mode navbar-header">
            <a class="navbar-brand" href="#">EventLink</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item active">
                        <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Index" >Home <span class="sr-only">(current)</span></a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">Link</a>
                    </li>
                    <li class="nav-item dropdown">
                        <button class="btn btn-secondary dropdown-toggle" type="button" id="navbarDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Filter
                        </button>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <a class="dropdown-item" href="@Url.Action("Index", new { category = "All" })">All</a>
                            <a class="dropdown-item" href="@Url.Action("Index", new { category = "S" })">Sports</a>
                            <a class="dropdown-item" href="@Url.Action("Index", new { category = "C" })">Concerts</a>
                            <a class="dropdown-item" href="@Url.Action("Index", new { category = "R" })">Restaurants</a>
                        </div>
                    </li>
                </ul>

                <button id="darkModeToggle">Toggle Dark Mode</button>

                <form class="form-inline my-2 my-lg-0">
                    <div class="input-group">
                        <input id="searchInput" class="form-control" type="search" placeholder="Search" aria-label="Search">
                        <div class="input-group-append">
                            <button class="btn btn-outline-success" type="submit">Search</button>
                        </div>
                    </div>
                </form>
            </div>
        </nav>
    </header>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <!-- Bootstrap JavaScript -->
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.7.0/dist/js/bootstrap.bundle.min.js"></script>

    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
    document.addEventListener("DOMContentLoaded", function () {
        const darkModeToggle = document.getElementById("darkModeToggle");
        const body = document.body;
        const cards = document.querySelectorAll(".card");
        const titles = document.querySelectorAll(".title");
        const cardBlocks = document.querySelectorAll(".card-block");
        const buttons = document.querySelectorAll(".btn");
        const navbar = document.querySelectorAll(".navbar");
        const navbarBrands = document.querySelectorAll(".navbar-brand");
        const navLinks = document.querySelectorAll(".nav-link");
        const dropdownMenus = document.querySelectorAll(".dropdown-menu");
        const searchInputs = document.querySelectorAll(".form-control[type='search']");
        const searchButtons = document.querySelectorAll(".btn-outline-success[type='submit']");
        const navbarTogglerIcons = document.querySelectorAll(".navbar-toggler-icon");
        const darkModeNavbarCollapse = document.querySelector(".collapse");
        const header = document.querySelector("header");

        // Function to toggle dark mode
        const toggleDarkMode = () => {
            body.classList.toggle("dark-mode");
            cards.forEach(card => card.classList.toggle("dark-mode"));
            titles.forEach(title => title.classList.toggle("dark-mode"));
            cardBlocks.forEach(block => block.classList.toggle("dark-mode"));
            buttons.forEach(button => button.classList.toggle("dark-mode"));
            navbar.forEach(navbar => navbar.classList.toggle("dark-mode"));
            navbarBrands.forEach(brand => brand.classList.toggle("dark-mode"));
            navLinks.forEach(link => link.classList.toggle("dark-mode"));
            dropdownMenus.forEach(menu => menu.classList.toggle("dark-mode"));
            searchInputs.forEach(input => input.classList.toggle("dark-mode"));
            searchButtons.forEach(button => button.classList.toggle("dark-mode"));
            navbarTogglerIcons.forEach(icon => icon.classList.toggle("dark-mode"));
            darkModeNavbarCollapse.classList.toggle("dark-mode"); // Toggle dark mode for the .navbar-collapse
            header.classList.toggle("dark-mode");
        };

        // Add a click event listener to the dark mode toggle button
        darkModeToggle.addEventListener("click", () => {
            toggleDarkMode();
        });
        //event listener for the dropdown
        var dropdowns = document.querySelectorAll('.dropdown-toggle');
        dropdowns.forEach(function (dropdown) {
            dropdown.addEventListener('click', function () {
                dropdown.nextElementSibling.classList.toggle('show');
            });
        });
    });
</script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>

@*Parts of this code ChatGPT was used in order to help with the functionality, this is mostly for the script which is at the bottom*@
@*This was used to help with the nav bar, a lot of this code was changed but this was used to help https://getbootstrap.com/docs/4.0/components/navbar/*@
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - EventLink</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
   @*  <link rel="stylesheet" href="~/path/to/bootstrap-multiselect.css" /> *@
    <link rel="stylesheet" href="~/EventLink.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/dark_mode.css" asp-append-version="true" />
</head>

<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-light bg-light dark-mode navbar-header">
            <a class="navbar-brand" href="#">EventLink</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon">
                    <span></span>
                    <span></span>
                    <span></span>
                </span>
            </button>

            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarScrollingDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Filter
                        </a>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="filterAll" checked>
                                <label class="form-check-label" for="filterAll">
                                    All
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="filterSports">
                                <label class="form-check-label" for="filterSports">
                                    Sports
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="filterConcerts">
                                <label class="form-check-label" for="filterConcerts">
                                    Concerts
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="filterRestaurants">
                                <label class="form-check-label" for="filterRestaurants">
                                    Restaurants
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="filterOthers">
                                <label class="form-check-label" for="filterOthers">
                                    Others
                                </label>
                            </div>
                            <button class="btn btn-primary" onclick="applyFilters()">Apply</button>
                        </div>
                    </li>

                    <li class="nav-item">
                        <button id="darkModeToggle" class="btn btn-dark">Dark Mode</button>
                    </li>
                </ul>

                <form class="form-inline my-2 my-lg-0 ml-auto">
                    <div class="input-group">
                        <input class="form-control" type="search" placeholder="Search" aria-label="Search" id="searchInput">
                        <div class="input-group-append">
                            <button class="btn btn-outline-success" type="submit">Search</button>
                        </div>
                    </div>
                </form>
            </div>
        </nav>
    </header>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            function setCheckboxState() {
                var selectedFilters = JSON.parse(localStorage.getItem('selectedFilters')) || [];
                document.querySelectorAll('.form-check-input').forEach(checkbox => {
                    var category = checkbox.id.replace("filter", "");
                    if (category === "S") {
                        checkbox.checked = selectedFilters.includes("Sports");
                    } else if (category === "C") {
                        checkbox.checked = selectedFilters.includes("Concerts");
                    } else if (category === "R") {
                        checkbox.checked = selectedFilters.includes("Restaurants");
                    } else if (category === "O") {
                        checkbox.checked = selectedFilters.includes("Others");
                    }
                });
            }

            // Function to apply filters
            function applyFilters() {
                var selectedFilters = [];
                document.querySelectorAll('.form-check-input').forEach(checkbox => {
                    if (checkbox.checked) {
                        var category = checkbox.id.replace("filter", "");
                        if (category === "Sports") {
                            selectedFilters.push("S");
                        } else if (category === "Concerts") {
                            selectedFilters.push("C");
                        } else if (category === "Restaurants") {
                            selectedFilters.push("R");
                        } else if (category === "Others") {
                            selectedFilters.push("O");
                        }
                    }
                });

                // Construct the base URL
                var baseUrl = "https://localhost:7181/";

                // Append categories to the URL if selectedFilters is not empty
                var url = selectedFilters.length > 0 ? baseUrl + "?category=" + selectedFilters.join(",") : baseUrl;

                // Save selected filters to localStorage
                localStorage.setItem('selectedFilters', JSON.stringify(selectedFilters));

                // Redirect to the constructed URL
                window.location.href = url;
            }

            // Check and uncheck checkboxes based on localStorage on page load
            setCheckboxState();

            // Add click event listener to the apply filters button
            var applyFiltersBtn = document.querySelector('.btn-primary');
            if (applyFiltersBtn) {
                applyFiltersBtn.addEventListener("click", applyFilters);
            }
        });
    </script>

    @* script for dark mode button, read more text, and navbar toggler icon *@
            <script>
                document.addEventListener("DOMContentLoaded", function () {

                    function toggleCardText(card) {
                        const cardText = card.querySelector('.card-text');
                        const expandButton = card.querySelector('.expand-button');

                        cardText.classList.toggle('expanded');

                        if (cardText.classList.contains('expanded')) {
                            expandButton.innerText = 'Read Less';
                        } else {
                            expandButton.innerText = 'Read More';
                        }
                    }

                    // Add click event listeners to each card's expand button
                    document.querySelectorAll('.expand-button').forEach(function (button) {
                        button.addEventListener('click', function () {
                            const card = button.closest('.card');
                            toggleCardText(card);
                        });
                    });

                    const darkModeToggle = document.getElementById("darkModeToggle");
                    const body = document.body;
                    // const dropdownButton = document.getElementById("navbarScrollingDropdown");
                    const navbarCollapse = document.getElementById("navbarSupportedContent");
                    const navbarTogglerIcon = document.querySelector(".navbar-toggler");
                    const cards = document.querySelectorAll(".card");
                    const titles = document.querySelectorAll(".title");
                    const cardBlocks = document.querySelectorAll(".card-block");
                    const buttons = document.querySelectorAll(".btn");
                    const navbar = document.querySelectorAll(".navbar");
                    const navbarBrands = document.querySelectorAll(".navbar-brand");
                    const navLinks = document.querySelectorAll(".nav-link");
                    const dropdownMenus = document.querySelectorAll(".dropdown-menu");
                    const searchInputs = document.querySelectorAll(".form-control[type='search']");
                    const searchButtons = document.querySelectorAll(".btn-outline-success[type='submit']");
                    const navbarTogglerIcons = document.querySelectorAll(".navbar-toggler-icon");
                    const darkModeNavbarCollapse = document.querySelector(".collapse");
                    const header = document.querySelector("header");

                    // Function to handle the click on the navbar-toggler icon
                    const handleNavbarToggle = () => {
                        navbarCollapse.classList.toggle("show");
                        darkModeToggle.classList.remove("collapsed");
                    };

                    // Function to toggle dark mode
                    const toggleDarkMode = () => {
                        body.classList.toggle("dark-mode");
                        cards.forEach(card => card.classList.toggle("dark-mode"));
                        titles.forEach(title => title.classList.toggle("dark-mode"));
                        cardBlocks.forEach(block => block.classList.toggle("dark-mode"));
                        buttons.forEach(button => button.classList.toggle("dark-mode"));
                        navbar.forEach(navbar => navbar.classList.toggle("dark-mode"));
                        navbarBrands.forEach(brand => brand.classList.toggle("dark-mode"));
                        navLinks.forEach(link => link.classList.toggle("dark-mode"));
                        dropdownMenus.forEach(menu => menu.classList.toggle("dark-mode"));
                        searchInputs.forEach(input => input.classList.toggle("dark-mode"));
                        searchButtons.forEach(button => button.classList.toggle("dark-mode"));
                        navbarTogglerIcons.forEach(icon => icon.classList.toggle("dark-mode"));
                        darkModeNavbarCollapse.classList.toggle("dark-mode"); // Toggle dark mode for the .navbar-collapse
                        header.classList.toggle("dark-mode");
                // Save dark mode state to localStorage
                const isDarkMode = body.classList.contains("dark-mode");
                localStorage.setItem("darkMode", isDarkMode ? "true" : "false");
                    };

            // Load dark mode state from localStorage on page load
            const isDarkMode = localStorage.getItem("darkMode") === "true";
            if (isDarkMode) {
                toggleDarkMode();
            }
                    // Add a click event listener to the button
                    darkModeToggle.addEventListener("click", () => {
                        toggleDarkMode();
                    });

                    // Add a click event listener to the navbar-toggler icon
                    navbarTogglerIcon.addEventListener("click", () => {
                        handleNavbarToggle();
                    });
                });
            </script>


    <div class="container">
                <main role="main" class="pb-3">
                    @RenderBody()
                </main>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    @* <script src="~/path/to/bootstrap-multiselect.js"></script> *@
    <script src="~/js/site.js" asp-append-version="true"></script>



    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>



